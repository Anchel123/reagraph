import{r}from"./index-BBkUAzwr.js";import{c as Q,g as y,u as V}from"./RadialMenu-BZb6EL-Y.js";function W(b,p,v){return Q(b,p,v)}const $=({selections:b=[],nodes:p=[],actives:v=[],focusOnSelect:g=!0,type:h="single",pathHoverType:w="out",pathSelectionType:k="direct",ref:c,hotkeys:D=["selectAll","deselect","delete"],disabled:o,onSelection:a})=>{const[M,K]=r.useState([]),[A,C]=r.useState(v),[n,d]=r.useState(b),[N,L]=r.useState(!1),E=h==="multi"||h==="multiModifier",u=r.useCallback(e=>{if(!o&&e){e=Array.isArray(e)?e:[e];const s=e.filter(t=>!n.includes(t));if(s.length){const t=[...n,...s];a==null||a(t),d(t)}}},[o,n,a]),m=r.useCallback(e=>{if(!o&&e){e=Array.isArray(e)?e:[e];const s=n.filter(t=>!e.includes(t));a==null||a(s),d(s)}},[o,n,a]),l=r.useCallback((e=[])=>{o||(e=Array.isArray(e)?e:[e],C([]),d(e),a==null||a(e))},[o,a]),I=r.useCallback(e=>{n.includes(e)?m(e):E?u(e):l(e)},[u,l,n,E,m]),z=r.useCallback(e=>{var s;if(E?h==="multiModifier"?N?u(e.id):l(e.id):u(e.id):l(e.id),g===!0||g==="singleOnly"&&!N){if(!c.current)throw new Error("No ref found for the graph canvas.");const t=c.current.getGraph(),{nodes:i}=y(t,[e.id],k);(s=c.current)==null||s.centerGraph([e.id,...i])}},[u,l,g,E,N,k,c,h]),R=r.useCallback((e,s)=>{const t=c.current.getGraph();if(!t)throw new Error("Graph is not initialized");const i=W(t,e,s);l([e,s]);const P=[];for(let f=0;f<i.length-1;f++){const F=i[f],J=i[f+1],j=t.getEdgeAttributes(F,J);j&&P.push(j.id)}C([...i.map(f=>f),...P])},[l,c]),G=r.useCallback(e=>{const s=e.target,t=s.tagName!=="INPUT"&&s.tagName!=="SELECT"&&s.tagName!=="TEXTAREA"&&!s.isContentEditable,i=e.metaKey||e.ctrlKey;t&&i&&(e.preventDefault(),L(!0))},[]);r.useEffect(()=>(typeof window<"u"&&window.addEventListener("keydown",G),()=>{typeof window<"u"&&window.removeEventListener("keydown",G)}),[G]);const U=r.useCallback(e=>{var s;if(e.button!==2&&(n.length||A.length)&&(l(),L(!1),g&&n.length===1)){if(!c.current)throw new Error("No ref found for the graph canvas.");(s=c.current)==null||s.centerGraph()}},[l,g,A.length,n.length,c]),X=r.useCallback(e=>{C(e)},[]),q=r.useCallback(e=>{l(e)},[l]),x=r.useCallback(e=>{if(w){const s=c.current.getGraph();if(!s)throw new Error("No ref found for the graph canvas.");const{nodes:t,edges:i}=y(s,[e.id],w);K([...t,...i])}},[w,c]),B=r.useCallback(()=>{w&&K([])},[w]);return r.useEffect(()=>{var e;if(k!=="direct"&&n.length>0){const s=(e=c.current)==null?void 0:e.getGraph();if(s){const{nodes:t,edges:i}=y(s,n,k);C([...t,...i])}}},[n,k,c]),V([{name:"Select All",keys:"mod+a",disabled:!D.includes("selectAll"),category:"Graph",description:"Select all nodes and edges",callback:e=>{if(e.preventDefault(),!o&&h!=="single"){const s=p.map(t=>t.id);a==null||a(s),d(s)}}},{name:"Deselect Selections",category:"Graph",disabled:!D.includes("deselect"),description:"Deselect selected nodes and edges",keys:"escape",callback:e=>{o||(e.preventDefault(),a==null||a([]),d([]))}}]),{actives:r.useMemo(()=>[...A,...M],[A,M]),onNodeClick:z,onNodePointerOver:x,onNodePointerOut:B,onLasso:X,onLassoEnd:q,selectNodePaths:R,onCanvasClick:U,selections:n,clearSelections:l,addSelection:u,removeSelection:m,toggleSelection:I,setSelections:d}};export{$ as u};
